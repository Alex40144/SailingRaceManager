generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Users {
  name     String
  id       String  @id @unique @default(uuid())
  email    String  @unique
  password String
  settings Json
  club     Clubs   @relation(fields: [clubId], references: [id])
  clubId   String
  permLvl  Int
  uuid     String? @unique

  @@index([clubId])
}

model Boats {
  id               String   @id @unique @default(uuid())
  name             String
  crew             Int
  py               Int
  pursuitStartTime Int
  club             Clubs    @relation(fields: [clubId], references: [id])
  clubId           String
  results          Result[]

  @@index([clubId])
}

model Clubs {
  id       String   @id @unique @default(uuid())
  name     String   @unique
  settings Json
  series   Series[]
  boats    Boats[]
  users    Users[]
}

model Series {
  id       String @id @unique @default(uuid())
  name     String
  club     Clubs  @relation(fields: [clubId], references: [id], onDelete: Cascade)
  clubId   String
  settings Json
  races    Race[]

  @@index([clubId])
}

model Race {
  id        String   @id @unique @default(uuid())
  number    Int
  Time      String
  OOD       String
  AOD       String
  SO        String
  ASO       String
  results   Result[]
  Type      String
  series    Series   @relation(fields: [seriesId], references: [id], onDelete: Cascade)
  seriesId  String
  startTime Int

  @@index([seriesId])
}

model Result {
  id            String  @id @unique @default(uuid())
  race          Race    @relation(fields: [raceId], references: [id], onDelete: Cascade)
  raceId        String
  Helm          String
  Crew          String
  boat          Boats?  @relation(fields: [boatId], references: [id])
  boatId        String?
  SailNumber    String
  finishTime    Int
  lapTimes      Json
  CorrectedTime Float
  Position      Int
  resultCode    String

  @@index([raceId])
  @@index([boatId])
}
